<SearchAndDisplayKontorhuseComponent OnKontorhusSelected="OnKontorhusSelected"></SearchAndDisplayKontorhuseComponent>

@inject IJSRuntime JSRuntime

@if (this.Lejer.KontorhusLejere != null && this.Lejer.KontorhusLejere.Count > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>Navn</th>
                <th></th>
            </tr>
    
        </thead>
        <tbody>
            @foreach (var khusLejer in this.Lejer.KontorhusLejere)
            {
                <tr>
                    <td>
                        @khusLejer.Kontorhus?.KontorhusNavn
                    </td>
                   @* <td>
                        <button
                            class="btn btn-link"
                            type="button"
                        @onclick="@(() => RemoveLejer(khusLejer))">
                            Slet</button>
                    </td>*@
                </tr>
            }
        </tbody>
    </table>
   
}

@code {

    [Parameter] // is passed from outside
    public Lejer Lejer { get; set; } = new Lejer();


    //private void RemoveLejer(KontorhusLejer kontorhusLejer)
    //{
    //    this.Kontorhus.KontorhusLejere.Remove(kontorhusLejer);
    //}


    //private async void RemoveLejer(KontorhusLejer kontorhusLejer)
    //{
    //    bool confirmed = await JSRuntime.InvokeAsync<bool>("confirm", "Vil du fjerne lejeren?");
    //    if (confirmed)
    //    {
    //        this.Kontorhus.KontorhusLejere.Remove(kontorhusLejer);
    //        StateHasChanged();
    //    }
    //}

    private void OnKontorhusSelected(Kontorhus kontorhus)
    {

      //  this.Lejer.AddKontorhus(kontorhus);
    }
}
