@page "/reception2"
@inject IViewLejereByNameUseCase ViewLejereByNameUseCase
@inject NavigationManager NavigationManager


<div class="p-5 text-center bg-image" style="
      background-image: url('Images/image2.jpg');
      height: 300px;
    ">

    <div class="d-flex justify-content-center align-items-center h-100">
        <div class="text-white">
            <h1 class="mb-3">Velkommen til Business House</h1>
            <h4 class="mb-3">Klik på virksomheden du vil besøge</h4>

        </div>
    </div>
</div>




<div class="container mt-4">
    @foreach (var lejer in Lejere)
    {

        <button type="button"
            class="btn btn-success m-3 w-25"
            @onclick="@(() => SeLejer(lejer.LejerID))">
            @lejer.Navn
        </button>

    }

    <br />

</div>

@if (Lejere == null)
{
    <div class="spinner"></div>
}
else
{

<div class="card-deck">
    @foreach (var lejer in Lejere)
    {
            <div class="card m-3" @onclick="@(() => SeLejer(lejer.LejerID))" style="min-width: 18rem; max-width:30.5%; cursor:pointer;">
            <div class="card-header">
                <h3>@lejer.Navn</h3>
            </div>
            @*     <img class="card-img-top imageThumbnail" src="@employee.PhotoPath" />*@
@*            <div class="card-footer text-center">
                <a href="#" class="btn btn-primary m-1">View</a>

                <a href="#" class="btn btn-primary m-1">Edit</a>

                <a href="#" class="btn btn-danger m-1">Delete</a>
            </div>*@
        </div>
    }
</div>
}

@code {

    [Parameter]
    public List<Lejer> Lejere { get; set; } = new List<Lejer>();

    public void SeLejer(int lejerId)
    {
        NavigationManager.NavigateTo($"/lejer/{lejerId}");

    }

    [Parameter]
    public string SearchTerm { get; set; } = string.Empty;

    protected override async Task OnParametersSetAsync()
    {
        Lejere = (await ViewLejereByNameUseCase.ExecuteAsync(this.SearchTerm)).OrderBy((item) => item.Navn).ToList();
    }

}
